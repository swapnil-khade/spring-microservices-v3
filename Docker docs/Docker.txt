wsl --install
wsl --list --online

185
docker -v
docker container run hello-world
docker run -p 5000:5000 in28min/todo-rest-api-h2:1.0.0.RELEASE

187
docker run -p 5000:5000 -d in28min/todo-rest-api-h2:1.0.0.RELEASE						detached mode
docker run -p 5000:5000 -d --restart=always in28min/todo-rest-api-h2:1.0.0.RELEASE		if you restart docker desktop

docker logs [container id]
docker logs -f [container id]															follow logs



docker container ls
docker container ls -a 																	all containers
docker images





191
docker image history [image id]
docker image inspect [image id]
docker image remove [image id]

192


docker container prune 																	remove all stopped containers


docker container pause [container id]
docker container unpause [container id]

docker container stop [container id]													gracefully shutdown
docker container kill [container id]

docker run -p 5000:5000 -d --restart=always in28min/todo-rest-api-h2:1.0.0.RELEASE		if you restart docker desktop. for db this can be used.

193

docker events																			to check what is happening
docker top [container id]
docker stats

docker run -p 5000:5000 -m 512m --cpu-quota 50000 -d in28min/todo-rest-api-h2:1.0.0.RELEASE										100000 : 100%
docker system df

196																DISTRIBUTED TRACING SERVER 
docker run -p 9411:9411 openzipkin/zipkin:2.23

199
zipkin tracing server

143
spring-boot:build-image -DskipTests

144-150
docker-compose up



docker images
docker pull hello-world
docker pull openjdk:18
docker search MySql

docker run -d openjdk																	detached mode
docker ps																				running containers
docker ps -a
docker run --env || --detach --name

docker run --name jdkContainer -d openjdk
docker run --name jdkContainer1 -it -d openjdk || interactive

docker exec -it [container id] [command]  
 
docker inspect [container id]

docker stop [container id/name]

docker rm  [container name]

docker rmi [image name]

docker restart [container name]

docker login
docker commit
docker push
docker copy
docker logs -f
docker stop
docker volume
docker logout

docker build -t myubuntuimage .


docker build -t fileName.jar .						TO CREATE IMAGE

docker-compose up -d 								detached mode




